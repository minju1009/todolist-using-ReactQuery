{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMutation } from 'react-query';\nimport axios from 'axios';\nimport axiosClient from 'libs/axios/axios';\nconst fetchLogin = async (email, password) => {\n  const {\n    data\n  } = await axiosClient.post('/users/login', {\n    email,\n    password\n  });\n  return data;\n};\nconst useLoginQuery = setErrorText => {\n  _s();\n  return useMutation(_ref => {\n    let {\n      email,\n      password\n    } = _ref;\n    return fetchLogin(email, password);\n  }, {\n    onSuccess: data => {\n      console.log(data);\n      alert('로그인에 성공했습니다');\n    },\n    onError: error => {\n      if (axios.isAxiosError(error)) {\n        var _error$response;\n        setErrorText((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data.details);\n      }\n    }\n  });\n};\n_s(useLoginQuery, \"wwwtpB20p0aLiHIvSy5P98MwIUg=\", false, function () {\n  return [useMutation];\n});\nexport default useLoginQuery;","map":{"version":3,"names":["useMutation","axios","axiosClient","fetchLogin","email","password","data","post","useLoginQuery","setErrorText","onSuccess","console","log","alert","onError","error","isAxiosError","response","details"],"sources":["/Users/kimminju/Desktop/Coding/wanted-pre-onboarding-challenge-fe-1/trip-todo/src/pages/Auth/queries/useLoginQuery.ts"],"sourcesContent":["import { useMutation } from 'react-query';\nimport axios, { AxiosError } from 'axios';\n\nimport axiosClient from 'libs/axios/axios';\n\nconst fetchLogin = async (email: string, password: string) => {\n  const { data } = await axiosClient.post('/users/login', { email, password });\n\n  return data;\n};\n\nconst useLoginQuery = (setErrorText: Function) =>\n  useMutation(\n    ({ email, password }: { email: string; password: string }) =>\n      fetchLogin(email, password),\n    {\n      onSuccess: (data) => {\n        console.log(data);\n        alert('로그인에 성공했습니다');\n      },\n      onError: (error: AxiosError) => {\n        if (axios.isAxiosError(error)) {\n          setErrorText(error.response?.data.details);\n        }\n      },\n    },\n  );\n\nexport default useLoginQuery;\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,OAAOC,KAAK,MAAsB,OAAO;AAEzC,OAAOC,WAAW,MAAM,kBAAkB;AAE1C,MAAMC,UAAU,GAAG,OAAOC,KAAa,EAAEC,QAAgB,KAAK;EAC5D,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMJ,WAAW,CAACK,IAAI,CAAC,cAAc,EAAE;IAAEH,KAAK;IAAEC;EAAS,CAAC,CAAC;EAE5E,OAAOC,IAAI;AACb,CAAC;AAED,MAAME,aAAa,GAAIC,YAAsB;EAAA;EAAA,OAC3CT,WAAW,CACT;IAAA,IAAC;MAAEI,KAAK;MAAEC;IAA8C,CAAC;IAAA,OACvDF,UAAU,CAACC,KAAK,EAAEC,QAAQ,CAAC;EAAA,GAC7B;IACEK,SAAS,EAAGJ,IAAI,IAAK;MACnBK,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;MACjBO,KAAK,CAAC,aAAa,CAAC;IACtB,CAAC;IACDC,OAAO,EAAGC,KAAiB,IAAK;MAC9B,IAAId,KAAK,CAACe,YAAY,CAACD,KAAK,CAAC,EAAE;QAAA;QAC7BN,YAAY,oBAACM,KAAK,CAACE,QAAQ,oDAAd,gBAAgBX,IAAI,CAACY,OAAO,CAAC;MAC5C;IACF;EACF,CAAC,CACF;AAAA;AAAC,GAfEV,aAAa;EAAA,QACjBR,WAAW;AAAA;AAgBb,eAAeQ,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}