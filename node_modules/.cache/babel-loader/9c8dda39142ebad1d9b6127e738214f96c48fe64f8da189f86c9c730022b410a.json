{"ast":null,"code":"var _jsxFileName = \"/Users/kimminju/Desktop/Coding/wanted-pre-onboarding-challenge-fe-1/trip-todo/src/pages/Auth/components/Form/index.tsx\",\n  _s = $RefreshSig$();\nimport styled from 'styled-components';\nimport { font } from 'styles/fonts';\nimport Input from 'pages/Auth/components/Input';\nimport React, { useEffect, useState } from 'react';\nimport { validateEmail, validatePassword } from 'utiils/regExp';\nimport useSignupQuery from 'pages/Auth/queries/useSignupQuery';\nimport useLoginQuery from 'pages/Auth/queries/useLoginQuery';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form() {\n  _s();\n  const navigate = useNavigate();\n  const [mode, setMode] = useState('회원가입');\n  const loginMode = mode === '로그인';\n  const [userInfo, setUserInfo] = useState({\n    email: '',\n    password: ''\n  });\n  const [isError, setIsError] = useState(false);\n  const [errorText, setErrorText] = useState('');\n  const {\n    mutate: signup,\n    isError: signupError,\n    isSuccess: signupSuccess\n  } = useSignupQuery(setErrorText);\n  const {\n    mutate: login,\n    isError: loginError,\n    isSuccess: loginSuccess\n  } = useLoginQuery();\n  const {\n    email,\n    password\n  } = userInfo;\n  const handleInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setIsError(false);\n    setUserInfo(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleConfirmBtnClick = () => {\n    if (loginMode) {\n      login({\n        email,\n        password\n      });\n      return;\n    }\n    signup({\n      email,\n      password\n    });\n  };\n  const handleModeChange = () => {\n    loginMode ? setMode('회원가입') : setMode('로그인');\n  };\n  useEffect(() => {\n    if (signupError || loginError) {\n      setIsError(true);\n    }\n  }, [signupError, loginError]);\n  useEffect(() => {\n    if (signupSuccess) {\n      setMode('로그인');\n    }\n  }, [signupSuccess]);\n  useEffect(() => {\n    if (loginSuccess) {\n      navigate('/todo');\n    }\n  }, [loginSuccess]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: loginMode ? '다시 오신 것을 환영합니다.' : '회원가입을 해 주세요.'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SubTitle, {\n      children: \"\\uC138\\uBD80 \\uC0AC\\uD56D\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      autoFocus: true,\n      title: \"\\uB85C\\uADF8\\uC778\",\n      placeholder: \"\\uC774\\uBA54\\uC77C\\uC744 \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694\",\n      name: \"email\",\n      value: email,\n      onChangeInput: handleInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      title: \"\\uD328\\uC2A4\\uC6CC\\uB4DC\",\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694\",\n      type: \"password\",\n      isError: isError,\n      name: \"password\",\n      value: password,\n      subText: errorText,\n      onChangeInput: handleInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmButton, {\n      disabled: !validateEmail(email) || !validatePassword(password),\n      onClick: handleConfirmBtnClick,\n      children: loginMode ? '로그인' : '확인'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModeChangerBtn, {\n      onClick: handleModeChange,\n      children: loginMode ? '아직 계정이 없으신가요?  회원가입' : '로그인하러 가기'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(Form, \"zjG9O468a4c+PLc9f0Nmx0seRKg=\", false, function () {\n  return [useNavigate, useSignupQuery, useLoginQuery];\n});\n_c = Form;\nconst Container = styled.div`\n  width: 500px;\n  margin: 100px auto 0;\n  padding: 60px 40px 0;\n  text-align: center;\n`;\n_c2 = Container;\nconst Title = styled.h1`\n  ${font(24, 700, 30)}\n  color: #C58940;\n`;\n_c3 = Title;\nconst SubTitle = styled.h3`\n  ${font(14, 400, 16)}\n  margin : 12px 0 30px;\n  color: #c58940;\n`;\n_c4 = SubTitle;\nconst ConfirmButton = styled.button`\n  display: block;\n  margin: 50px auto 0;\n  width: 420px;\n  ${font(16, 700, 18)};\n  color: white;\n  padding: 15px;\n  border-radius: 10px;\n  background-color: #c58940;\n\n  :disabled {\n    background-color: #c1a179;\n  }\n`;\n_c5 = ConfirmButton;\nconst ModeChangerBtn = styled.button`\n  ${font(14, 400, 16)}\n  display: block;\n  margin: 20px auto;\n  color: #c58940;\n`;\n_c6 = ModeChangerBtn;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"SubTitle\");\n$RefreshReg$(_c5, \"ConfirmButton\");\n$RefreshReg$(_c6, \"ModeChangerBtn\");","map":{"version":3,"names":["styled","font","Input","React","useEffect","useState","validateEmail","validatePassword","useSignupQuery","useLoginQuery","useNavigate","Form","navigate","mode","setMode","loginMode","userInfo","setUserInfo","email","password","isError","setIsError","errorText","setErrorText","mutate","signup","signupError","isSuccess","signupSuccess","login","loginError","loginSuccess","handleInput","e","name","value","target","prev","handleConfirmBtnClick","handleModeChange","Container","div","Title","h1","SubTitle","h3","ConfirmButton","button","ModeChangerBtn"],"sources":["/Users/kimminju/Desktop/Coding/wanted-pre-onboarding-challenge-fe-1/trip-todo/src/pages/Auth/components/Form/index.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nimport { font } from 'styles/fonts';\nimport Input from 'pages/Auth/components/Input';\nimport React, { useEffect, useState } from 'react';\n\nimport { validateEmail, validatePassword } from 'utiils/regExp';\nimport useSignupQuery from 'pages/Auth/queries/useSignupQuery';\nimport useLoginQuery from 'pages/Auth/queries/useLoginQuery';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function Form() {\n  const navigate = useNavigate();\n  const [mode, setMode] = useState('회원가입');\n  const loginMode = mode === '로그인';\n  const [userInfo, setUserInfo] = useState({\n    email: '',\n    password: '',\n  });\n  const [isError, setIsError] = useState(false);\n  const [errorText, setErrorText] = useState<string>('');\n\n  const {\n    mutate: signup,\n    isError: signupError,\n    isSuccess: signupSuccess,\n  } = useSignupQuery(setErrorText);\n\n  const {\n    mutate: login,\n    isError: loginError,\n    isSuccess: loginSuccess,\n  } = useLoginQuery();\n\n  const { email, password } = userInfo;\n  const handleInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setIsError(false);\n    setUserInfo((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const handleConfirmBtnClick = () => {\n    if (loginMode) {\n      login({ email, password });\n      return;\n    }\n\n    signup({ email, password });\n  };\n\n  const handleModeChange = () => {\n    loginMode ? setMode('회원가입') : setMode('로그인');\n  };\n\n  useEffect(() => {\n    if (signupError || loginError) {\n      setIsError(true);\n    }\n  }, [signupError, loginError]);\n\n  useEffect(() => {\n    if (signupSuccess) {\n      setMode('로그인');\n    }\n  }, [signupSuccess]);\n\n  useEffect(() => {\n    if (loginSuccess) {\n      navigate('/todo');\n    }\n  }, [loginSuccess]);\n\n  return (\n    <Container>\n      <Title>\n        {loginMode ? '다시 오신 것을 환영합니다.' : '회원가입을 해 주세요.'}\n      </Title>\n      <SubTitle>세부 사항을 입력해주세요.</SubTitle>\n      <Input\n        autoFocus\n        title=\"로그인\"\n        placeholder=\"이메일을 입력해 주세요\"\n        name=\"email\"\n        value={email}\n        onChangeInput={handleInput}\n      />\n      <Input\n        title=\"패스워드\"\n        placeholder=\"비밀번호를 입력해 주세요\"\n        type=\"password\"\n        isError={isError}\n        name=\"password\"\n        value={password}\n        subText={errorText}\n        onChangeInput={handleInput}\n      />\n      <ConfirmButton\n        disabled={!validateEmail(email) || !validatePassword(password)}\n        onClick={handleConfirmBtnClick}\n      >\n        {loginMode ? '로그인' : '확인'}\n      </ConfirmButton>\n      <ModeChangerBtn onClick={handleModeChange}>\n        {loginMode ? '아직 계정이 없으신가요?  회원가입' : '로그인하러 가기'}\n      </ModeChangerBtn>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  width: 500px;\n  margin: 100px auto 0;\n  padding: 60px 40px 0;\n  text-align: center;\n`;\n\nconst Title = styled.h1`\n  ${font(24, 700, 30)}\n  color: #C58940;\n`;\n\nconst SubTitle = styled.h3`\n  ${font(14, 400, 16)}\n  margin : 12px 0 30px;\n  color: #c58940;\n`;\n\nconst ConfirmButton = styled.button`\n  display: block;\n  margin: 50px auto 0;\n  width: 420px;\n  ${font(16, 700, 18)};\n  color: white;\n  padding: 15px;\n  border-radius: 10px;\n  background-color: #c58940;\n\n  :disabled {\n    background-color: #c1a179;\n  }\n`;\n\nconst ModeChangerBtn = styled.button`\n  ${font(14, 400, 16)}\n  display: block;\n  margin: 20px auto;\n  color: #c58940;\n`;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,mBAAmB;AAEtC,SAASC,IAAI,QAAQ,cAAc;AACnC,OAAOC,KAAK,MAAM,6BAA6B;AAC/C,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,SAASC,aAAa,EAAEC,gBAAgB,QAAQ,eAAe;AAC/D,OAAOC,cAAc,MAAM,mCAAmC;AAC9D,OAAOC,aAAa,MAAM,kCAAkC;AAC5D,SAASC,WAAW,QAAQ,kBAAkB;AAAC;AAE/C,eAAe,SAASC,IAAI,GAAG;EAAA;EAC7B,MAAMC,QAAQ,GAAGF,WAAW,EAAE;EAC9B,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,MAAM,CAAC;EACxC,MAAMU,SAAS,GAAGF,IAAI,KAAK,KAAK;EAChC,MAAM,CAACG,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC;IACvCa,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACZ,CAAC,CAAC;EACF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAS,EAAE,CAAC;EAEtD,MAAM;IACJmB,MAAM,EAAEC,MAAM;IACdL,OAAO,EAAEM,WAAW;IACpBC,SAAS,EAAEC;EACb,CAAC,GAAGpB,cAAc,CAACe,YAAY,CAAC;EAEhC,MAAM;IACJC,MAAM,EAAEK,KAAK;IACbT,OAAO,EAAEU,UAAU;IACnBH,SAAS,EAAEI;EACb,CAAC,GAAGtB,aAAa,EAAE;EAEnB,MAAM;IAAES,KAAK;IAAEC;EAAS,CAAC,GAAGH,QAAQ;EACpC,MAAMgB,WAAW,GAAIC,CAAsC,IAAK;IAC9D,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCf,UAAU,CAAC,KAAK,CAAC;IACjBJ,WAAW,CAAEoB,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACH,IAAI,GAAGC;IAAM,CAAC,CAAC,CAAC;EACrD,CAAC;EAED,MAAMG,qBAAqB,GAAG,MAAM;IAClC,IAAIvB,SAAS,EAAE;MACbc,KAAK,CAAC;QAAEX,KAAK;QAAEC;MAAS,CAAC,CAAC;MAC1B;IACF;IAEAM,MAAM,CAAC;MAAEP,KAAK;MAAEC;IAAS,CAAC,CAAC;EAC7B,CAAC;EAED,MAAMoB,gBAAgB,GAAG,MAAM;IAC7BxB,SAAS,GAAGD,OAAO,CAAC,MAAM,CAAC,GAAGA,OAAO,CAAC,KAAK,CAAC;EAC9C,CAAC;EAEDV,SAAS,CAAC,MAAM;IACd,IAAIsB,WAAW,IAAII,UAAU,EAAE;MAC7BT,UAAU,CAAC,IAAI,CAAC;IAClB;EACF,CAAC,EAAE,CAACK,WAAW,EAAEI,UAAU,CAAC,CAAC;EAE7B1B,SAAS,CAAC,MAAM;IACd,IAAIwB,aAAa,EAAE;MACjBd,OAAO,CAAC,KAAK,CAAC;IAChB;EACF,CAAC,EAAE,CAACc,aAAa,CAAC,CAAC;EAEnBxB,SAAS,CAAC,MAAM;IACd,IAAI2B,YAAY,EAAE;MAChBnB,QAAQ,CAAC,OAAO,CAAC;IACnB;EACF,CAAC,EAAE,CAACmB,YAAY,CAAC,CAAC;EAElB,oBACE,QAAC,SAAS;IAAA,wBACR,QAAC,KAAK;MAAA,UACHhB,SAAS,GAAG,iBAAiB,GAAG;IAAc;MAAA;MAAA;MAAA;IAAA,QACzC,eACR,QAAC,QAAQ;MAAA,UAAC;IAAc;MAAA;MAAA;MAAA;IAAA,QAAW,eACnC,QAAC,KAAK;MACJ,SAAS;MACT,KAAK,EAAC,oBAAK;MACX,WAAW,EAAC,gEAAc;MAC1B,IAAI,EAAC,OAAO;MACZ,KAAK,EAAEG,KAAM;MACb,aAAa,EAAEc;IAAY;MAAA;MAAA;MAAA;IAAA,QAC3B,eACF,QAAC,KAAK;MACJ,KAAK,EAAC,0BAAM;MACZ,WAAW,EAAC,sEAAe;MAC3B,IAAI,EAAC,UAAU;MACf,OAAO,EAAEZ,OAAQ;MACjB,IAAI,EAAC,UAAU;MACf,KAAK,EAAED,QAAS;MAChB,OAAO,EAAEG,SAAU;MACnB,aAAa,EAAEU;IAAY;MAAA;MAAA;MAAA;IAAA,QAC3B,eACF,QAAC,aAAa;MACZ,QAAQ,EAAE,CAAC1B,aAAa,CAACY,KAAK,CAAC,IAAI,CAACX,gBAAgB,CAACY,QAAQ,CAAE;MAC/D,OAAO,EAAEmB,qBAAsB;MAAA,UAE9BvB,SAAS,GAAG,KAAK,GAAG;IAAI;MAAA;MAAA;MAAA;IAAA,QACX,eAChB,QAAC,cAAc;MAAC,OAAO,EAAEwB,gBAAiB;MAAA,UACvCxB,SAAS,GAAG,qBAAqB,GAAG;IAAU;MAAA;MAAA;MAAA;IAAA,QAChC;EAAA;IAAA;IAAA;IAAA;EAAA,QACP;AAEhB;AAAC,GAhGuBJ,IAAI;EAAA,QACTD,WAAW,EAcxBF,cAAc,EAMdC,aAAa;AAAA;AAAA,KArBKE,IAAI;AAkG5B,MAAM6B,SAAS,GAAGxC,MAAM,CAACyC,GAAI;AAC7B;AACA;AACA;AACA;AACA,CAAC;AAAC,MALID,SAAS;AAOf,MAAME,KAAK,GAAG1C,MAAM,CAAC2C,EAAG;AACxB,IAAI1C,IAAI,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAE;AACtB;AACA,CAAC;AAAC,MAHIyC,KAAK;AAKX,MAAME,QAAQ,GAAG5C,MAAM,CAAC6C,EAAG;AAC3B,IAAI5C,IAAI,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAE;AACtB;AACA;AACA,CAAC;AAAC,MAJI2C,QAAQ;AAMd,MAAME,aAAa,GAAG9C,MAAM,CAAC+C,MAAO;AACpC;AACA;AACA;AACA,IAAI9C,IAAI,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,MAbI6C,aAAa;AAenB,MAAME,cAAc,GAAGhD,MAAM,CAAC+C,MAAO;AACrC,IAAI9C,IAAI,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAE;AACtB;AACA;AACA;AACA,CAAC;AAAC,MALI+C,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}